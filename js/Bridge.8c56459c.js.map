{"version":3,"sources":["webpack:///./src/views/Bridge.vue","webpack:///./src/constant/Chain.js","webpack:///./src/constant/Bridge.js","webpack:///./src/state/bridge/Contract.js","webpack:///./src/state/bridge/Multicall.js","webpack:///./src/state/bridge/index.js","webpack:///./src/views/Bridge.vue?5f7d"],"names":["class","_createElementVNode","_createElementBlock","_hoisted_3","_createVNode","_component_el_button","type","plain","onClick","$setup","_hoisted_5","_component_el_card","_component_el_link","target","href","chain","name","_component_el_icon","_component_Link","_toDisplayString","token","symbol","contractBalance","decimals","_hoisted_9","_hoisted_11","_hoisted_12","_hoisted_13","_component_el_select","$event","value-key","placeholder","_Fragment","_renderList","chains","item","_createBlock","_component_el_option","key","chainId","label","value","disabled","_hoisted_17","_component_el_input","style","chainAToBTokenAmount","oninput","_hoisted_19","_hoisted_22","tokenBalance","_hoisted_23","_hoisted_24","_component_Bottom","_hoisted_25","_hoisted_27","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_37","_component_ApproveButton","customClass","onApprovalChange","approval","tokenApproval","spender","owner","address","amount","_hoisted_38","_hoisted_40","bnbTestnet","rpcUrl","currencySymbol","blockExplorerUrl","sepoliaTestnet","BRIDGE_CONTRACT_ADDRESS","CHAIN","MULTICALL_ADDRESS","RPC_URL","TOKENS","BIRD","Token","getMulticallAddress","getBridgeAddress","getRpcProvider","simpleRpcProvider","StaticJsonRpcProvider","getContract","abi","signer","signerOrProvider","Contract","getMulticallContract","MULTICALL_ABI","multicall","calls","multi","itf","Interface","calldata","map","call","toLowerCase","callData","encodeFunctionData","params","aggregate","returnData","res","i","decodeFunctionResult","getTokenBalance","account","erc20ABI","rawTokenBalances","parsedTokenBalances","BigNumber","toJSON","console","log","message","FEE","components","Link","Bottom","ApproveButton","setup","Web3Connect","useWeb3Connect","network","data","reactive","chainA","chainB","form","chainBToATokenAmount","isOnBriding","ref","chainKey","push","availableTokens","computed","tokenInChain","tokensInChain","tokenKey","chainAContractUrl","chainBContractUrl","chainABridgeContractAddress","aToBInputError","inputError","aToBInputValid","inputValid","bToAInputError","bToAInputValid","watch","newVal","fetchChainInfo","autoSelectChainBToken","chainObject","fetchTokenInfo","tokenInfo","contractInfo","balance","pairChain","inputAmount","id","amountToBride","TokenAmount","parseUnits","amountBalance","destinationContractTokenAmount","lessThan","parseFloat","balances","fetchAll","Promise","all","tokenAInfo","tokenBInfo","contractAInfo","contractBInfo","briding","transactionHash","fullScreenLoading","ElLoading","service","lock","text","background","web3","getWeb3","_amount","_token","toChain","bridgeContractAddress","bridgeContract","eth","BRIDGE_ABI","tx","methods","receiveTokens","estimateGas","from","estimatedGas","gasPrice","useGasPrice","send","gas","on","_transactionHash","ElNotification","title","dangerouslyUseHTMLString","viewTransactionOnBlockExplorer","duration","setTimeout","clearForm","close","error","contractErrorExtract","refresh","tokenBalanceFormat","__exports__","render"],"mappings":"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","file":"js/Bridge.8c56459c.js","sourcesContent":["<template>\n    <div class=\"Bridge\">\n        <div class=\"flex-center\">\n            <div>\n                <h1>Bridge</h1>\n                <div>\n                    <el-button type=\"primary\" plain @click=\"refresh\">Refresh</el-button>\n                </div>\n            </div>\n        </div>\n        <br>\n        <div class=\"flex-center\">\n            <el-card>\n                <div class=\"flex justify-content-space-around\">\n                    <div>\n                        <div class=\"text-bold\">\n                            <el-link type=\"primary\" target=\"_blank\" :href=\"chainAContractUrl\">\n                                {{ chainA.chain ? chainA.chain.name : '-' }} Bridge Contract\n                                &nbsp;<el-icon><Link /></el-icon>\n                            </el-link>\n                        </div>\n                        <div>\n                            Balance {{ chainA.token ? `${chainA.token.symbol}: ${tokenBalanceFormat(chainA.contractBalance, chainA.token.decimals, 5)}` : 0 }}\n                        </div>\n                    </div>\n                    <div class=\"horizontal-space-10\"></div>\n                    <div>\n                        <div class=\"text-bold\">\n                            <el-link type=\"primary\" target=\"_blank\" :href=\"chainBContractUrl\">\n                                {{ chainB.chain ? chainB.chain.name : '-' }} Bridge Contract\n                                &nbsp;<el-icon><Link /></el-icon>\n                            </el-link>\n                        </div>\n                        <div>\n                            Balance {{ chainB.token ? `${chainB.token.symbol}: ${tokenBalanceFormat(chainB.contractBalance, chainB.token.decimals, 5)}` : 0 }}\n                        </div>\n                    </div>\n                    <div class=\"horizontal-space-10\"></div>\n                    <div>\n                        <div class=\"text-bold\">\n                            Bridging Fee\n                        </div>\n                        <div>\n                            {{ FEE }} token/TX\n                        </div>\n                    </div>\n                </div>\n            </el-card>\n        </div>\n        <br>\n        <div class=\"flex-center\">\n            <el-card>\n                <div class=\"flex-center\">\n                    <div class=\"text-align-center\">\n                        <div>\n                            <el-select v-model=\"chainA.chain\" value-key=\"chainId\" class=\"m-2\" placeholder=\"Select network\">\n                                <el-option\n                                v-for=\"item in data.chains\"\n                                :key=\"item.chainId\"\n                                :label=\"item.name\"\n                                :value=\"item\"\n                                :disabled=\"item === chainB.chain\"\n                                />\n                            </el-select>\n                        </div>\n                        <div class=\"vertical-space-5\"></div>\n                        <div class=\"flex justify-content-center\">\n                            <div>\n                                <el-select v-model=\"chainA.token\" value-key=\"symbol\" class=\"m-2\" placeholder=\"Select Token\">\n                                    <el-option\n                                    v-for=\"item in availableTokens\"\n                                    :key=\"item.symbol\"\n                                    :label=\"item.symbol\"\n                                    :value=\"item\"\n                                    />\n                                </el-select>\n                            </div>\n                            <div>\n                                <el-input \n                                style=\"width: 200px;\" \n                                v-model=\"form.chainAToBTokenAmount\" \n                                placeholder=\"0.0\" \n                                oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"></el-input>\n                                <div class=\"vertical-space-5\"></div>\n                                <div class=\"flex justify-content-end\">\n                                    Balance: \n                                    <div v-if=\"chainA.token\">\n                                        {{ tokenBalanceFormat(chainA.tokenBalance, chainA.token.decimals, 5) }} \n                                    </div>\n                                    <div v-else>\n                                        0.00\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"vertical-space-10\"></div>\n                        <el-icon>\n                            <Bottom />\n                        </el-icon>\n                        <div class=\"vertical-space-10\"></div>\n                        <div class=\"flex align-items-center justify-content-space-between\">\n                            <el-select v-model=\"chainB.chain\" value-key=\"chainId\" class=\"m-2\" placeholder=\"Select network\">\n                                <el-option\n                                v-for=\"item in data.chains\"\n                                :key=\"item.chainId\"\n                                :label=\"item.name\"\n                                :value=\"item\"\n                                :disabled=\"item === chainA.chain\"\n                                />\n                            </el-select>\n                            <div class=\"horizontal-space-5\"></div>\n                            <div class=\"flex justify-content-end\">\n                                <div v-if=\"chainB.token\">\n                                    {{ chainB.token.symbol }}\n                                </div>\n                                <div class=\"horizontal-space-5\"></div>\n                                <div>\n                                    Balance: \n                                </div>\n                                <div v-if=\"chainB.token\">\n                                    {{ tokenBalanceFormat(chainB.tokenBalance, chainB.token.decimals, 5) }} \n                                </div>\n                                <div v-else>\n                                    0.00\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"vertical-space-10\"></div>\n                        <div class=\"vertical-space-10\"></div>\n                        <div>\n                            <div v-if=\"aToBInputError\" class=\"text-red\">\n                                {{ aToBInputError }}\n                            </div>\n                            <div v-if=\"chainA.token\">\n                                <ApproveButton \n                                    customClass=\"custom-button-100percent\"\n                                    @approvalChange=\"approval => { chainA.tokenApproval = approval }\"\n                                    :token=\"chainA.token\" \n                                    :spender=\"chainABridgeContractAddress\"\n                                    :owner=\"account.address\" \n                                    :amount=\"form.chainAToBTokenAmount\">\n                                </ApproveButton>\n                            </div>\n                            <div class=\"vertical-space-10\"></div>\n                            <el-button \n                            type=\"primary\" \n                            class=\"custom-button-100percent\"\n                            :disabled=\"!aToBInputValid || !chainA.tokenApproval\"\n                            @click=\"briding\">\n                                Bridge\n                            </el-button>\n                        </div>\n                    </div>\n                </div>\n            </el-card>\n        </div>\n        <br>\n    </div>\n</template>\n<script>\n\nimport { getTokenBalance } from '@/state/bridge'\nimport { getBridgeAddress } from '@/state/bridge/Contract'\nimport BRIDGE_ABI from '@/constant/abi/Bridge.json'\nimport useWeb3Connect from '@/use/Web3Connect'\nimport { reactive, computed, ref, watch } from 'vue'\nimport { TOKENS, BRIDGE_CONTRACT_ADDRESS } from '@/constant/Bridge.js'\nimport { tokenBalanceFormat } from '@/utils/formatBalance'\nimport { Link, Bottom } from '@element-plus/icons-vue'\nimport { TokenAmount } from '@pancakeswap/sdk'\nimport { parseUnits } from '@ethersproject/units'\nimport { useGasPrice } from '@/state/user/hook'\nimport contractErrorExtract from '@/lib/contractErrorExtract.js'\nimport { ElNotification, ElLoading } from 'element-plus'\nimport CHAIN from '@/constant/Chain'\nimport ApproveButton from '@/components/ApproveButton'\n\nconst FEE = '0.01'\n\nexport default {\n    components: {\n        Link,\n        Bottom,\n        ApproveButton,\n    },\n    setup() {\n\n        const Web3Connect = useWeb3Connect()\n        const account = Web3Connect.account\n        const network = Web3Connect.network\n\n        const data = reactive({\n            chains: [],\n        })\n\n        const chainA = reactive({\n            chain: null,\n            token: null,\n            tokenBalance: 0,\n            contractBalance: 0,\n            tokenApproval: false,\n        })\n\n        const chainB = reactive({\n            chain: null,\n            token: null,\n            tokenBalance: 0,\n            contractBalance: 0,\n            tokenApproval: false,\n        })\n\n        const form = reactive({\n            chainAToBTokenAmount: '',\n            chainBToATokenAmount: '',\n        })\n\n        const isOnBriding = ref(false)\n\n        for(const chainKey in CHAIN) {\n            data.chains.push(CHAIN[chainKey])\n        }\n\n        const availableTokens = computed(() => {\n            if(!chainA.chain) {\n                return []\n            }\n            const tokenInChain = TOKENS[chainA.chain.chainId]\n            const tokensInChain = []\n            for(const tokenKey in tokenInChain) {\n                tokensInChain.push(tokenInChain[tokenKey])\n            }\n            return tokensInChain\n        })\n\n        const chainAContractUrl = computed(() => {\n            return chainA.chain ? `${chainA.chain.blockExplorerUrl}/address/${BRIDGE_CONTRACT_ADDRESS[chainA.chain.chainId]}` : ''\n        })\n        const chainBContractUrl = computed(() => {\n            return chainB.chain ? `${chainB.chain.blockExplorerUrl}/address/${BRIDGE_CONTRACT_ADDRESS[chainB.chain.chainId]}` : ''\n        })\n        const chainABridgeContractAddress = computed(() => {\n            return chainA.chain ? getBridgeAddress(chainA.chain.chainId) : ''\n        })\n\n        const aToBInputError = computed(() => {\n            return inputError(chainA, chainB, form.chainAToBTokenAmount)\n        })\n        const aToBInputValid = computed(() => {\n            return inputValid(form.chainAToBTokenAmount, aToBInputError.value)\n        })\n        const bToAInputError = computed(() => {\n            return inputError(chainB, chainA, form.chainBToATokenAmount)\n        })\n        const bToAInputValid = computed(() => {\n            return inputValid(form.chainBToATokenAmount, bToAInputError.value)\n        })\n\n        watch(() => chainA.chain, (newVal) => {\n            chainA.token = null\n            if((newVal)) {\n                fetchChainInfo(newVal, chainA.token, chainA)\n                autoSelectChainBToken()\n            }\n            \n        })\n        watch(() => chainB.chain, (newVal) => {\n            if((newVal)) {\n                fetchChainInfo(newVal, chainB.token, chainB)\n                autoSelectChainBToken()\n            }  \n        })\n        watch(() => chainA.token, (newVal) => {\n            if((newVal)) {\n                fetchChainInfo(chainA.chain, newVal, chainA)\n                autoSelectChainBToken()\n            }\n        })\n        watch(() => chainB.token, (newVal) => {\n            if((newVal)) {\n                fetchChainInfo(chainB.chain, newVal, chainB)\n            }\n        })\n\n        const autoSelectChainBToken = () => {\n            if(!chainA.chain || !chainA.token || !chainB.chain) {\n                chainB.token = null\n                return\n            }\n            chainB.token = TOKENS[chainB.chain.chainId][chainA.token.symbol]\n        }\n\n        const fetchChainInfo = async (chain, token, chainObject) => {\n            if(!chain || !token) {\n                chainObject.tokenBalance = 0\n                chainObject.contractBalance = 0\n                return\n            }\n            const tokenInfo = await fetchTokenInfo(chain.chainId, token, account.value.address)\n            const contractInfo = await fetchTokenInfo(chain.chainId, token, BRIDGE_CONTRACT_ADDRESS[chain.chainId])\n            chainObject.tokenBalance = tokenInfo.balance\n            chainObject.contractBalance = contractInfo.balance\n        }\n        \n        const inputError = (chain, pairChain, inputAmount) => {\n            if(!inputAmount) {\n                return ''\n            }\n            if(!network.value) {\n                return ''\n            }\n            if(!pairChain.chain) {\n                return ''\n            }\n            if(network.value.id !== chain.chain.chainId) {\n                return `Change network to ${chain.chain.name}`\n            }\n            if(chain.chain.chainId === pairChain.chain.chainId) {\n                return `Can not bridge on same network`\n            }\n\n            const amountToBride = new TokenAmount(chain.token, parseUnits(inputAmount, chain.token.decimals))\n            const amountBalance = new TokenAmount(chain.token, chain.tokenBalance)\n            const destinationContractTokenAmount = new TokenAmount(chain.token, pairChain.contractBalance)\n            if(amountBalance.lessThan(amountToBride)) {\n                return `Insufficient ${chainA.token.symbol} balance`\n            }\n            if(destinationContractTokenAmount.lessThan(amountToBride)) {\n                return `Insufficient ${chainA.token.symbol} balance on ${pairChain.chain.name} smart contract`\n            }\n            return ''\n        }\n\n        const inputValid = (inputAmount, inputError) => {\n            if(!network.value) {\n                return ''\n            }\n            if(!inputAmount) {\n                return false\n            }\n            if(parseFloat(inputAmount) <= 0) {\n                return false\n            }\n            if(inputError) {\n                return false\n            }\n            return true\n        }\n\n        const fetchTokenInfo = async (chainId, token, account) => {\n            const balances = await getTokenBalance(chainId, token.address, account)\n            const balance = balances[0]\n            return {\n                balance,\n            }\n        }\n\n        const fetchAll = async () => {\n\n            if(!chainA.chain || !chainB.chain) {\n                return\n            }\n\n            const [tokenAInfo, tokenBInfo, contractAInfo, contractBInfo] = await Promise.all([\n                fetchTokenInfo(chainA.chain.chainId, chainA.token, account.value.address),\n                fetchTokenInfo(chainB.chain.chainId, chainB.token, account.value.address),\n                fetchTokenInfo(chainA.chain.chainId, chainA.token, BRIDGE_CONTRACT_ADDRESS[chainA.chain.chainId]),\n                fetchTokenInfo(chainB.chain.chainId, chainB.token, BRIDGE_CONTRACT_ADDRESS[chainB.chain.chainId]),\n            ])\n\n            chainA.tokenBalance = tokenAInfo.balance\n            chainA.contractBalance = contractAInfo.balance\n            chainB.tokenBalance = tokenBInfo.balance\n            chainB.contractBalance = contractBInfo.balance\n\n        }\n\n        const briding = async () => {\n\n            let transactionHash = ''\n            let fullScreenLoading = null\n\n            isOnBriding.value = true\n            fullScreenLoading = ElLoading.service({\n                lock: true,\n                text: 'Loading',\n                background: 'rgba(0, 0, 0, 0.7)',\n            })\n\n            const web3 = Web3Connect.getWeb3()\n\n            const _amount = parseUnits(form.chainAToBTokenAmount, chainA.token.decimals)\n            const _token = chainA.token.address\n            const toChain = chainB.chain.chainId\n\n            const bridgeContractAddress = getBridgeAddress(chainA.chain.chainId)\n            const bridgeContract = new web3.eth.Contract(BRIDGE_ABI, bridgeContractAddress)\n\n            const tx = bridgeContract.methods.receiveTokens(_amount, _token, toChain)\n            const estimatedGas = await tx.estimateGas({from: account.value.address})\n            const gasPrice = useGasPrice()\n\n            tx.send({\n                from: account.value.address,\n                gas: estimatedGas,\n                gasPrice: gasPrice,\n            })\n            .on('transactionHash', (_transactionHash) => {\n                transactionHash = _transactionHash\n            })\n            .on('receipt', async () => {\n                ElNotification({\n                    customClass: 'top-of-every-thing',\n                    type: 'success',\n                    title: 'Transaction receipt',\n                    dangerouslyUseHTMLString: true,\n                    message: `<a href=\"${viewTransactionOnBlockExplorer(chainA.chain, transactionHash)}\" target=\"_blank\">View on Block Explorer: ${transactionHash}</a>`,\n                    duration: 10 * 1000,\n                })\n                \n                setTimeout(async () => {\n                    await fetchAll()\n                    clearForm()\n                    isOnBriding.value = false\n                    fullScreenLoading.close()\n                    ElNotification({\n                        customClass: 'top-of-every-thing',\n                        type: 'success',\n                        title: 'Briding done.',\n                        dangerouslyUseHTMLString: true,\n                        message: `<a href=\"${viewTransactionOnBlockExplorer(chainA.chain, transactionHash)}\" target=\"_blank\">View on Block Explorer: ${transactionHash}</a>`,\n                        duration: 10 * 1000,\n                    })\n                }, 10 * 1000)\n            })\n            .on('error', (error) => {\n                console.log('bridge error', error.message)\n                ElNotification({\n                    customClass: 'top-of-every-thing',\n                    type: 'warning',\n                    title: 'Bridge fail',\n                    message: contractErrorExtract(error.message),\n                    duration: 15 * 1000,\n                })\n                isOnBriding.value = false\n                fullScreenLoading.close()\n            }) \n        }\n\n        const viewTransactionOnBlockExplorer = (chain, transactionHash) => {\n            return `${chain.blockExplorerUrl}/tx/${transactionHash}`\n        }\n\n        const clearForm = () => {\n            form.chainAToBTokenAmount = ''\n            form.chainBToATokenAmount = ''\n        }\n\n        const refresh = async () => {\n\n            let fullScreenLoading = null\n\n            isOnBriding.value = true\n            fullScreenLoading = ElLoading.service({\n                lock: true,\n                text: 'Loading',\n                background: 'rgba(0, 0, 0, 0.7)',\n            })\n\n            await fetchAll()\n\n            fullScreenLoading.close()\n        }\n\n        return {\n            data,\n            availableTokens,\n            chainA,\n            chainB,\n            tokenBalanceFormat,\n            form,\n            FEE,\n            chainAContractUrl,\n            chainBContractUrl,\n            chainABridgeContractAddress,\n            aToBInputError,\n            aToBInputValid,\n            bToAInputError,\n            bToAInputValid,\n            briding,\n            refresh,\n            account,\n        }\n    }\n}\n</script>\n","import { infuraKey, bnbTestnetRpcUrl } from '@/constant/config/Env'\n\nexport default {\n    bnbTestnet: {\n        chainId: 97,\n        name: 'BNB Smart Chain Testnet',\n        rpcUrl: 'https://data-seed-prebsc-1-s1.binance.org:8545',\n        currencySymbol: 'tBNB',\n        blockExplorerUrl: 'https://testnet.bscscan.com',\n    },\n    sepoliaTestnet: {\n        chainId: 11155111,\n        name: 'Sepolia test network',\n        rpcUrl: `https://rpc.sepolia.org`,\n        currencySymbol: 'SepoliaETH',\n        blockExplorerUrl: 'https://sepolia.etherscan.io',\n    },\n}","import CHAIN from '@/constant/Chain'\nimport { Token } from '@pancakeswap/sdk'\n\nexport const BRIDGE_CONTRACT_ADDRESS = {\n    [CHAIN.bnbTestnet.chainId]: '0x8493786453107BBeb8a2f08EdF970BB7B1fbd756',\n    [CHAIN.sepoliaTestnet.chainId]: '0x155ba527b671Dc82e31144503d6f45Db162E9B8F',\n}\n\nexport const MULTICALL_ADDRESS = {\n    [CHAIN.bnbTestnet.chainId]: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n    [CHAIN.sepoliaTestnet.chainId]: '0xcA11bde05977b3631167028862bE2a173976CA11',\n}\n\nexport const RPC_URL = {\n    [CHAIN.bnbTestnet.chainId]: CHAIN.bnbTestnet.rpcUrl,\n    [CHAIN.sepoliaTestnet.chainId]: CHAIN.sepoliaTestnet.rpcUrl,\n}\n\nexport const TOKENS = {\n    [CHAIN.bnbTestnet.chainId]: {\n        BIRD: new Token(\n            CHAIN.bnbTestnet.chainId,\n            '0x9aC9cdD0c5512eFe69e599db74A2148f68e4cAD8',\n            18,\n            'BIRD',\n            'Birdswap Token',\n            'https://www.birdswap.org/',\n        ),\n    },\n    [CHAIN.sepoliaTestnet.chainId]: {\n        BIRD: new Token(\n            CHAIN.sepoliaTestnet.chainId,\n            '0x1BfEA78465784C2AB2FD4A93eb7C608D814f9c7f',\n            18,\n            'BIRD',\n            'Birdswap Token',\n            'https://www.birdswap.org/',\n        ),\n    },\n}","import { StaticJsonRpcProvider } from '@ethersproject/providers'\nimport { Contract } from '@ethersproject/contracts'\nimport { MULTICALL_ADDRESS, RPC_URL, BRIDGE_CONTRACT_ADDRESS } from '@/constant/Bridge'\nimport CHAIN from '@/constant/Chain'\nimport MULTICALL_ABI from '@/constant/abi/Multicall'\n\nconst getMulticallAddress = (chainId) => {\n    return MULTICALL_ADDRESS[chainId] ? MULTICALL_ADDRESS[chainId] : MULTICALL_ADDRESS[CHAIN.bnbTestnet.chainId]\n}\nexport const getBridgeAddress = (chainId) => {\n    return BRIDGE_CONTRACT_ADDRESS[chainId] ? BRIDGE_CONTRACT_ADDRESS[chainId] : null\n}\n\nconst getRpcProvider = (chainId) => {\n    const rpcUrl = RPC_URL[chainId] ? RPC_URL[chainId] : RPC_URL[CHAIN.bnbTestnet.chainId]\n    const simpleRpcProvider = new StaticJsonRpcProvider(rpcUrl)\n    return simpleRpcProvider\n}\n\nconst getContract = (abi, address, signer, simpleRpcProvider) => {\n    const signerOrProvider = signer ?? simpleRpcProvider\n    return new Contract(address, abi, signerOrProvider)\n}\n\nexport const getMulticallContract = (chainId) => {\n\n    const abi = MULTICALL_ABI\n    const address = getMulticallAddress(chainId)\n    const simpleRpcProvider = getRpcProvider(chainId)\n\n    return getContract(abi, address, null, simpleRpcProvider)\n}","import { Interface } from '@ethersproject/abi'\nimport { getMulticallContract } from '@/state/bridge/Contract'\n\nexport const multicall = async (chainId, abi, calls) => {\n    \n    const multi = getMulticallContract(chainId)\n    const itf = new Interface(abi)\n\n    const calldata = calls.map((call) => ({\n        target: call.address.toLowerCase(),\n        callData: itf.encodeFunctionData(call.name, call.params),\n    }))\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n}","import BigNumber from 'bignumber.js'\nimport { multicall } from '@/state/bridge/Multicall'\nimport erc20ABI from '@/constant/abi/ERC20.json'\n\nexport const getTokenBalance = async (chainId, address, account) => {\n\n    const calls = [\n        {\n            address: address,\n            name: 'balanceOf',\n            params: [account],\n        }\n    ]\n\n    try {\n        const rawTokenBalances = await multicall(chainId, erc20ABI, calls)\n        const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n            return new BigNumber(tokenBalance).toJSON()\n        })\n        return parsedTokenBalances\n    } catch (error) {\n        console.log('state.bridge.getTokenBalance error', error.message)\n        return '0'\n    }   \n}","import { render } from \"./Bridge.vue?vue&type=template&id=54432fba\"\nimport script from \"./Bridge.vue?vue&type=script&lang=js\"\nexport * from \"./Bridge.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/mana/ethereum/bnb-chain/bird-swap/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}